a)

y = i <= n ^ s >= i(i+1)/4

{n >= 0} -> 0 >= 0 é veridico, logo pode ser cortado, ficando com n >= 0
{0 <= n ^ 0 >= 0}
s:= 0
{0 <= n ^ s >= 0(1)/4}
i:= 0
{y}
while i < n do:
    {y ^ i < n} -> invariante implica a invariante e se entramos no ciclo i < n //isto deve tar mal
    {i+2 <= n ^ s+1 >= (i+2)(i+3)/4}
    i:= i+2
    {i <= n ^ s+1 >= i(i+1)/4}
    s:= s+i
    {y}
{y ^ !(i < n)}
{s >= n(n+1)/4}

b)

e = i //variant

while i < n  do:
    {y ^ i < n} -> {n >= i+2}
    i:= i+2;
    {n >= i}
    s:= s+i;
    {n >= i}
{n >= i ^ !(i > n)} -> {i == n}

while i < n do:
    {n >= i ^ n > i ^ e = v} ->
    {i + 2 < v} //isto nao se verfica, k alterar para corrigir?
    i:= i+2;
    {i < v}
    s:= s+i;
    {i < v}

Como i é uma expressao inteira temos de demonstrar:

    y ^ n > i -> e >= 0

Que pode ser traduzido para

    n >= i ^ n > i -> n >= i

Que claramente se verfica

c)

//TODO 